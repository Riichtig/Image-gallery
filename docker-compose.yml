version: '3.9'

services:
  db:
    image: postgres:14-alpine
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data/
    networks:
      default:
        ipv4_address: 172.25.0.2
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - DANGEROUSLY_DISABLE_HOST_CHECK=true  # Disable host checking in development
    networks:
      default:
        ipv4_address: 172.25.0.4
    depends_on:
      - nginx  # Ensures Nginx starts first

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    networks:
      default:
        ipv4_address: 172.25.0.3
    depends_on:
      - db

  nginx:
    image: nginx:alpine
    ports:
      - '80:80'  # Bind to port 80 on all network interfaces
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      default:
        ipv4_address: 172.25.0.5

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
